---
import PageLayout, {
  type Props as PageLayoutProps
} from '@/layouts/PageLayout.astro'
import { Image } from 'astro:assets'

export type Props = {
  frontmatter: PageLayoutProps['frontmatter'] & {
    pixelfedAccountId: string
  }
}

interface PixelfeedImage {
  id: string
  url: string
  preview_url: string
  meta: {
    original: {
      width: number
      height: number
    }
  }
}

interface PixelfedPost {
  id: string
  url: string
  content: string
  facourites_count: number
  media_attachments: PixelfeedImage[]
}

async function loadPosts(
  accountId: string,
  maxId?: string
): Promise<PixelfedPost[]> {
  const response = await fetch(
    `https://pixelfed.social/api/pixelfed/v1/accounts/${accountId}/statuses?onlyMedia=true&limit=9` +
      (maxId ? `&max_id=${maxId}` : '')
  )

  if (!response.ok) {
    throw new Error(`Response status: ${response.status}`)
  }

  let posts = (await response.json()) as PixelfedPost[]

  if (posts[8]) {
    const lastId = posts[8].id
    const newMaxId = lastId.substring(0, lastId.length - 2) + '00'
    posts = posts.concat(await loadPosts(accountId, newMaxId))
  }

  return posts
}

const { frontmatter } = Astro.props

const posts = await loadPosts(frontmatter.pixelfedAccountId)
---

<PageLayout {frontmatter}>
  <slot />

  <div class="columns-1 gap-2 sm:columns-2 md:columns-3">
    {
      posts.flatMap((post) =>
        post.media_attachments.map((image) => (
          <div class="group relative">
            <Image
              src={image.url}
              title={post.content}
              alt={post.content}
              width={image.meta.original.width}
              height={image.meta.original.height}
              data-img-embed
              class="mt-0 mr-0 mb-0 ml-0 rounded-none! border-0! pb-2"
            />
            <div class="bg-opacity-65 pointer-events-none absolute inset-0 mb-2 flex items-end justify-center bg-black p-2 text-start text-sm text-white opacity-0 transition duration-500 ease-in-out group-hover:opacity-100">
              {post.content}
            </div>
          </div>
        ))
      )
    }
  </div>
</PageLayout>
