---
import { Image } from 'astro:assets'

interface BookwormBook {
  id: string
  title: string
  description: string
  cover: {
    url: string
  }
}

export interface Props {
  listId: string
}

const { listId } = Astro.props

async function loadBookwyrmListPage(
  pageNumber: number
): Promise<BookwormBook[]> {
  const response = await fetch(
    `https://bookwyrm.social/list/${listId}?page=${pageNumber}`,
    {
      headers: {
        Accept: 'application/json'
      }
    }
  )

  if (!response.ok) {
    throw new Error(`Response status: ${response.status}`)
  }

  let page = (await response.json()) as { orderedItems: BookwormBook[] }

  return page.orderedItems
}

async function loadBookwyrmList() {
  const response = await fetch(`https://bookwyrm.social/list/${listId}`, {
    headers: {
      Accept: 'application/json'
    }
  })

  if (!response.ok) {
    throw new Error(`Response status: ${response.status}`)
  }

  const { totalItems, summary, name } = (await response.json()) as {
    totalItems: number
    name: string
    summary: string
  }

  let page = 0

  let books: BookwormBook[] = []

  while (books.length < totalItems) {
    page += 1
    books = books.concat(await loadBookwyrmListPage(page))
  }

  return {
    books,
    name,
    summary
  }
}

const bookList = await loadBookwyrmList()
---

<h2>{bookList.name}</h2>

<div class="flex flex-wrap justify-center gap-4 md:justify-start">
  {
    bookList.books.map(({ id, cover: { url }, title }) => (
      <a href={id} target="_blank">
        <Image
          src={url}
          {title}
          height={216}
          width={140.8}
          style="height:216px; width:140.8px;"
          class="mt-0 mr-0 mb-0 ml-0"
          alt={`${title} cover`}
        />
      </a>
    ))
  }
</div>
